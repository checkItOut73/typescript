import webpack from 'webpack';
import webpackHotMiddlewareFlushProxy from '@server/webpackHotMiddlewareFlushProxy';
import webpackHotMiddleware, { EventStream } from 'webpack-hot-middleware';
import { NextHandleFunction } from 'connect';

jest.mock('webpack-hot-middleware');
jest.useFakeTimers();

const webpackHotMiddlewareMock: MockFunction<typeof webpackHotMiddleware> =
    webpackHotMiddleware;
const webpackCompiler = webpack({});

describe('webpackHotMiddlewareFlushProxy | ', () => {
    const webpackHotMiddlewareHandler: NextHandleFunction = jest.fn();

    beforeEach(() => {
        webpackHotMiddlewareMock.mockReturnValue(
            webpackHotMiddlewareHandler as NextHandleFunction & EventStream
        );
    });

    test('webpackHotMiddlewareFlushProxy calls the webpack-hot-middleware correctly', () => {
        webpackHotMiddlewareFlushProxy(webpackCompiler);

        expect(webpackHotMiddleware).toHaveBeenCalledWith(webpackCompiler, {
            path: '/__webpack_hmr'
        });
    });

    describe('webpackHotMiddlewareFlushProxy returns a middleware handler', () => {
        const request: { url?: string } = {};
        const response = {
            write: jest.fn()
        };
        const next = () => {};
        let middlewareHandler;

        beforeEach(() => {
            middlewareHandler = webpackHotMiddlewareFlushProxy(webpackCompiler);
        });

        test('that calls the webpack-hot-middleware handler correctly as a proxy', () => {
            middlewareHandler(request, response, next);

            expect(webpackHotMiddlewareHandler).toHaveBeenCalledWith(
                request,
                response,
                next
            );
        });

        test('that writes a flush message after a timeout for the hmr route', () => {
            request.url = '/__webpack_hmr';
            middlewareHandler(request, response, next);

            jest.advanceTimersByTime(1999);
            expect(response.write).not.toHaveBeenCalled();
            jest.advanceTimersByTime(1);
            expect(response.write).toHaveBeenCalledWith(
                'data: {"flush}\n\n'
            );
        });

        test('that does not write a flush message after a timeout for other routes', () => {
            request.url = '/some-other-route';
            middlewareHandler(request, response, next);

            jest.advanceTimersByTime(2000);
            expect(response.write).not.toHaveBeenCalled();
        });
    });
});
